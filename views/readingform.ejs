<% layout("layouts/boilerplate") %>

<div class="container">
  <h1 class="page-title">
    <i class="bi bi-clipboard-data me-2"></i>Add Crop Reading
  </h1>
  
  <div class="form-container">
    <form id="cropForm" action="/farm/save/cropreading" method="POST" onsubmit="return validateForm()">
      <input type="hidden" id="cropid" name="cropid" value="<%= cropid %>">
      
      <div class="mb-4">
        <label class="form-label fw-bold" for="name">
          <i class="bi bi-seedling me-2 text-success"></i>Plant Name
        </label>
        <input type="text" id="name" name="name" class="form-control" value="<%= cropName %>" required>
      </div>
      
      <div class="mb-4">
        <label class="form-label fw-bold" for="batch_no">
          <i class="bi bi-hash me-2 text-primary"></i>Batch Number
        </label>
        <input type="text" id="batch_no" name="batch_no" class="form-control" placeholder="BATCH001" required>
      </div>
      
      <div class="mb-4">
        <label class="form-label fw-bold" for="datetime">
          <i class="bi bi-calendar-event me-2 text-info"></i>Date & Time
        </label>
        <input type="datetime-local" id="datetime" name="datetime" class="form-control" required>
      </div>
      
      <div class="row">
        <div class="col-md-4 mb-4">
          <label class="form-label fw-bold" for="ph">
            <i class="bi bi-droplet me-2 text-info"></i>pH Value
          </label>
          <input type="number" step="0.1" id="ph" name="ph" class="form-control" placeholder="6.5" required>
        </div>
        
        <div class="col-md-4 mb-4">
          <label class="form-label fw-bold" for="ec">
            <i class="bi bi-lightning me-2 text-warning"></i>EC Level
          </label>
          <input type="number" step="0.1" id="ec" name="ec" class="form-control" placeholder="1.2" required>
        </div>
        
        <div class="col-md-4 mb-4">
          <label class="form-label fw-bold" for="temperature">
            <i class="bi bi-thermometer-half me-2 text-danger"></i>Temperature (Â°C)
          </label>
          <input type="number" step="0.1" id="temperature" name="temperature" class="form-control" required>
        </div>
      </div>
      
      <div class="mb-4">
        <label class="form-label fw-bold" for="photo">
          <i class="bi bi-camera me-2 text-secondary"></i>Plant Photo (Optional)
        </label>
        <input type="file" id="photo" name="photo" class="form-control" accept="image/*">
      </div>
      
      <div class="d-grid">
        <button type="submit" class="btn btn-primary btn-lg">
          <i class="bi bi-save me-2"></i>Save Reading
        </button>
      </div>
    </form>
  </div>
</div>

<script>
function validateForm() {
  const ph = parseFloat(document.getElementById('ph').value);
  const ec = parseFloat(document.getElementById('ec').value);
  const temperature = parseFloat(document.getElementById('temperature').value);
  const datetime = document.getElementById('datetime').value;
  const name = document.getElementById('name').value;
  const batch_no = document.getElementById('batch_no').value;
  
  if (isNaN(ph) || isNaN(ec) || isNaN(temperature)) {
    alert("Please enter valid numbers for pH, EC, and temperature.");
    return false;
  }
  
  if (!datetime || !name || !batch_no) {
    alert("Please fill in all required fields.");
    return false;
  }
  
  return true;
}

// Set current date and time
document.addEventListener("DOMContentLoaded", function () {
  const dateTimeInput = document.getElementById('datetime');
  const now = new Date();
  const year = now.getFullYear();
  const month = String(now.getMonth() + 1).padStart(2, '0');
  const day = String(now.getDate()).padStart(2, '0');
  const hours = String(now.getHours()).padStart(2, '0');
  const minutes = String(now.getMinutes()).padStart(2, '0');
  const formattedDateTime = `${year}-${month}-${day}T${hours}:${minutes}`;
  dateTimeInput.value = formattedDateTime;
});

// Auto-fill temperature from weather API
document.addEventListener("DOMContentLoaded", function () {
  const temperatureInput = document.getElementById('temperature');
  
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      const latitude = position.coords.latitude;
      const longitude = position.coords.longitude;
      const apiKey = '3466ccea418dd7adef8431c05d6c8042';
      const apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;

      fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
          if (data.main && data.main.temp) {
            temperatureInput.value = Math.round(data.main.temp);
          }
        })
        .catch(error => {
          console.error('Error fetching temperature:', error);
        });
    });
  }
});
</script>